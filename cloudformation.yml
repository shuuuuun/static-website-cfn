# ref. http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html

AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ProjectName:
    Type: String
    Default: ''
  CfComment:
    Type: String
    Default: ''
  LambdaFunctionARN:
    Type: String
    Default: ''

Conditions:
  ExistLambdaFunctionARN: !Not [!Equals [ !Ref LambdaFunctionARN, '' ]]

Resources:
  ######
  # S3
  ######
  # http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/quickref-s3.html
  # http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html
  myS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}
      WebsiteConfiguration:
        IndexDocument: index.html
    DeletionPolicy: Retain
  myBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref myS3Bucket
                - /*
      Bucket: !Ref myS3Bucket
    DeletionPolicy: Retain

  ######
  # CloudFront
  ######
  # http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/quickref-cloudfront.html
  # http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution.html
  myDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !Sub ${ProjectName}.s3-website-${AWS::Region}.amazonaws.com
          Id: !Sub S3-Website-${ProjectName}.s3-website-${AWS::Region}.amazonaws.com
          # S3OriginConfig:
          #   OriginAccessIdentity: ''
          CustomOriginConfig:
            OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: !Sub S3-Website-${ProjectName}.s3-website-${AWS::Region}.amazonaws.com
          ViewerProtocolPolicy: allow-all
          AllowedMethods:
          - GET
          - HEAD
          MinTTL: 0
          MaxTTL: 0
          DefaultTTL: 0
          ForwardedValues:
            Cookies:
              Forward: all
            QueryString: true
          Compress: true
          LambdaFunctionAssociations:
            !If
              - ExistLambdaFunctionARN
              -
                - EventType: viewer-request
                  LambdaFunctionARN: !Sub ${LambdaFunctionARN}
              - !Ref AWS::NoValue
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        HttpVersion: http2
        DefaultRootObject: index.html
        Comment: !Sub ${CfComment}
        Enabled: true
    DeletionPolicy: Retain

  ######
  # Lambda
  ######
  # http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/quickref-lambda.html
  # http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html
  # BasicAuthFunction:
  #   Type: AWS::Lambda::Function
  #   Properties: 
  #     Code:
  #       ZipFile:
  #     FunctionName: basic_auth
  #     Handler: index.handler
  #     Role: arn:aws:iam::000000000000:role/LambdaRole
  #     Runtime: nodejs6.10
  #     Timeout: 1

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
    DeletionPolicy: Retain
